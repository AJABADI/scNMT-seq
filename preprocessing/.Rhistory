colnames(a) <- c("sample","stage","batch","lineage","embryo")
a$sample
irene_samples <- sapply(strsplit(a$sample,"_"), function(x) str_c(x[[1]],x[[3]],x[[4]],sep="_"))
irene_samples
florian_samples <- irene_samples %in% colnames(sce)
colnames(sce)
colnames(sce1)
irene_samples %in% colnames(sce1)
head(irene_samples)
irene_samples <- sapply(strsplit(a$sample,"_"), function(x) str_c(x[[1]],x[[4]],x[[3]],sep="_"))
a <- read.table("/Users/ricard/data/gastrulation/sample_metadata/irene/metadata_E4.5.txt", stringsAsFactors=F, header=F)
colnames(a) <- c("sample","stage","batch","lineage","embryo")
irene_samples <- sapply(strsplit(a$sample,"_"), function(x) str_c(x[[1]],x[[4]],x[[3]],sep="_"))
b <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/expr_filtered_assigned/E4.5.txt", stringsAsFactors=F, header=F)
colnames(b) <- c("sample","sample2","embryo","plate","stage","batch")
irene_samples %in% colnames(sce1)
florian_samples <- colnames(sce1)[!colnames(sce1) %in% irene_samples]
florian_samples
# Match sample names
a$sample <- sapply(strsplit(str_c(a$sample,"_",a$batch),"_"), function(x) str_c(x[[1]],x[[4]],x[[3]],x[[2]],sep="_"))
c <- left_join(a,b,by="sample")
View(c)
a <- read.table("/Users/ricard/data/gastrulation/sample_metadata/irene/metadata_E4.5.txt", stringsAsFactors=F, header=F)
colnames(a) <- c("sample","stage","batch","lineage","embryo")
irene_samples <- sapply(strsplit(a$sample,"_"), function(x) str_c(x[[1]],x[[4]],x[[3]],sep="_"))
b <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/expr_filtered_assigned/E4.5.txt", stringsAsFactors=F, header=F)
colnames(b) <- c("sample","sample2","embryo","plate","stage","batch")
# Match sample names
a$sample <- sapply(strsplit(str_c(a$sample,"_",a$batch),"_"), function(x) str_c(x[[1]],x[[4]],x[[3]],x[[2]],sep="_"))
c <- left_join(a,b,by="sample")
View(c)
a <- read.table("/Users/ricard/data/gastrulation/sample_metadata/irene/metadata_E4.5.txt", stringsAsFactors=F, header=F)
colnames(a) <- c("sample","stage","batch","lineage","embryo")
irene_samples <- sapply(strsplit(a$sample,"_"), function(x) str_c(x[[1]],x[[4]],x[[3]],sep="_"))
a$sample
b <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/expr_filtered_assigned/E4.5.txt", stringsAsFactors=F, header=F)
colnames(b) <- c("sample","sample2","embryo","plate","stage","batch")
head(a$sample)
head(b$sample)
c <- left_join(a,b,by="sample")
View(c)
colnames(a)
colnames(b)
c <- left_join(a,b[,c("sample","plate","sample2","batch")],by="sample")
View(c)
c <- left_join(a[-c("batch")],b[,c("sample","plate","sample2","batch")],by="sample")
c <- left_join(a[,!colnames(a) %in% c("batch")],b[,c("sample","plate","sample2","batch")],by="sample")
View(c)
b <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/all_unassigned/E4.5.txt", stringsAsFactors=F, header=F)
write.table(c, file="/Users/ricard/data/gastrulation/sample_metadata/ricard/expr_filtered_assigned/E4.5.txt", quote=F, sep="\t", row.names=F, col.names=T )
c <- c[,c("sample","sample2","stage","embryo","batch","lineage","plate")]
# Save and modify manually
write.table(c, file="/Users/ricard/data/gastrulation/sample_metadata/ricard/expr_filtered_assigned/E4.5.txt", quote=F, sep="\t", row.names=F, col.names=T )
write.table(c, file="/Users/ricard/data/gastrulation/sample_metadata/ricard/expr_filtered_assigned/E4.5.txt", quote=F, sep="\t", row.names=F, col.names=F )
sce1 <- filter(sce, stage=="E3.5")
# Cells are identified uniquely by stage, batch, embryo and cell number.
# Let's rename cells and define a notation to make this consistent
library(stringr)
library(dplyr)
sce <- readRDS("/Users/ricard/data/gastrulation/expr/unprocessed/expr_sceset.rds")
sce <- calculateQCMetrics(sce)
sce <- updateSCESet(sce)
#4.5
sce1 <- filter(sce, stage=="E3.5")
sce1 <- filter(sce, stage=="E4.5")
sce1 <- scater::filter(sce, stage=="E4.5")
a <- read.table("/Users/ricard/data/gastrulation/sample_metadata/irene/metadata_E3.5.txt", stringsAsFactors=F, header=F)
colnames(a) <- c("sample","stage","batch","lineage","embryo")
irene_samples <- sapply(strsplit(a$sample,"_"), function(x) str_c(x[[1]],x[[4]],x[[3]],sep="_"))
b <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/all_unassigned/E3.5.txt", stringsAsFactors=F, header=F)
colnames(b) <- c("sample","sample2","embryo","plate","stage","batch")
a <- read.table("/Users/ricard/data/gastrulation/sample_metadata/irene/metadata_E4.5.txt", stringsAsFactors=F, header=F)
colnames(a) <- c("sample","stage","batch","lineage","embryo")
irene_samples <- sapply(strsplit(a$sample,"_"), function(x) str_c(x[[1]],x[[4]],x[[3]],sep="_"))
b <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/all_unassigned/E4.5.txt", stringsAsFactors=F, header=F)
colnames(b) <- c("sample","sample2","embryo","plate","stage","batch")
# Match sample names
# a$sample <- sapply(strsplit(str_c(a$sample,"_",a$batch),"_"), function(x) str_c(x[[1]],x[[4]],x[[3]],x[[2]],sep="_"))
# Check which samples florian has that irene has not included
# we will have to add them manually later
florian_samples <- colnames(sce1)[!colnames(sce1) %in% irene_samples]
florian_samples
colnames(sce1)
irene_samples
colnames(sce1) %in% irene_samples
irene_samples
head(irene_samples)
head(colnames(sce1))
sce$stage
sce1$stage
View(a)
irene_samples <- sapply(strsplit(a$sample,"_"), function(x) str_c(x[[1]],x[[4]],str_replace(x[[3]],"c","C"),sep="_"))
florian_samples <- colnames(sce1)[!colnames(sce1) %in% irene_samples]
florian_samples
florian_samples <- data.frame(sample=colnames(sce1)[!colnames(sce1) %in% irene_samples],
cluster=sce1$cluster[!colnames(sce1) %in% irene_samples])
colnames(sce1) %in% irene_samples
florian_samples <- data.frame(sample=colnames(sce1)[!colnames(sce1) %in% irene_samples],
cluster=sce1$clusCT[!colnames(sce1) %in% irene_samples])
View(florian_samples)
length(florian_samples)
length(florian_samples$sample)
colnames(sce1)
sce <- readRDS("/Users/ricard/data/gastrulation/expr/unprocessed/expr_sceset.rds")
sce <- calculateQCMetrics(sce)
sce <- updateSCESet(sce)
sce1 <- scater::filter(sce, stage=="E3.5")
a <- read.table("/Users/ricard/data/gastrulation/sample_metadata/irene/metadata_E3.5.txt", stringsAsFactors=F, header=F)
colnames(a) <- c("sample","stage","batch","lineage","embryo")
irene_samples <- sapply(strsplit(a$sample,"_"), function(x) str_c(x[[1]],x[[4]],str_replace(x[[3]],"c","C"),sep="_"))
b <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/all_unassigned/E3.5.txt", stringsAsFactors=F, header=F)
colnames(b) <- c("sample","sample2","embryo","plate","stage","batch")
# Match sample names
# a$sample <- sapply(strsplit(str_c(a$sample,"_",a$batch),"_"), function(x) str_c(x[[1]],x[[4]],x[[3]],x[[2]],sep="_"))
# Check which samples florian has that irene has not included
# we will have to add them manually later
florian_samples <- data.frame(sample=colnames(sce1)[!colnames(sce1) %in% irene_samples],
cluster=sce1$clusCT[!colnames(sce1) %in% irene_samples])
View(florian_samples)
c <- left_join(a[,!colnames(a) %in% c("batch")],b[,c("sample","plate","sample2","batch")],by="sample")
c <- c[,c("sample","sample2","stage","embryo","batch","lineage","plate")]
View(c)
irene_samples
irene_samples %in% colnames(sce1)
View(c)
View(c)
View(b)
write.table(c, file="/Users/ricard/data/gastrulation/sample_metadata/ricard/expr_filtered_assigned/E3.5.txt", quote=F, sep="\t", row.names=F, col.names=F )
a
florian_samples
colnames(sce1)
florian_samples <- data.frame(sample=colnames(sce1)[!colnames(sce1) %in% irene_samples],
cluster=sce1$clusCT[!colnames(sce1) %in% irene_samples])
View(florian_samples)
# Cells are identified uniquely by stage, batch, embryo and cell number.
# Let's rename cells and define a notation to make this consistent
library(stringr)
library(dplyr)
sce <- readRDS("/Users/ricard/data/gastrulation/expr/unprocessed/expr_sceset.rds")
sce <- calculateQCMetrics(sce)
sce <- updateSCESet(sce)
#4.5
sce1 <- scater::filter(sce, stage=="E5.5")
a <- read.table("/Users/ricard/data/gastrulation/sample_metadata/irene/metadata_E5.5.txt", stringsAsFactors=F, header=F)
colnames(a) <- c("sample","stage","batch","lineage","embryo")
irene_samples <- sapply(strsplit(a$sample,"_"), function(x) str_c(x[[1]],x[[4]],str_replace(x[[3]],"c","C"),sep="_"))
b <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/all_unassigned/E5.5.txt", stringsAsFactors=F, header=F)
colnames(b) <- c("sample","sample2","embryo","plate","stage","batch")
irene_samples %in% colnames(sce1)
irene_samples
colnames(sce1)
irene_samples <- sapply(strsplit(a$sample,"_"), function(x) str_c(x[[1]],x[[4]],str_replace(x[[3]],"C","c"),sep="_"))
irene_samples %in% colnames(sce1)
florian_samples <- data.frame(sample=colnames(sce1)[!colnames(sce1) %in% irene_samples],
cluster=sce1$clusCT[!colnames(sce1) %in% irene_samples])
View(florian_samples)
View(florian_samples)
asd = scater::filter(sce, stage=="E4.5")
asd$clusCT
colnames(asd)[asd$clusCT == "TB"]
c <- left_join(a[,!colnames(a) %in% c("batch")],b[,c("sample","plate","sample2","batch")],by="sample")
c <- c[,c("sample","sample2","stage","embryo","batch","lineage","plate")]
write.table(c, file="/Users/ricard/data/gastrulation/sample_metadata/ricard/expr_filtered_assigned/E5.5.txt", quote=F, sep="\t", row.names=F, col.names=F )
View(a)
View(b)
View(c)
View(florian_samples)
View(pData(sce1)[c("stage","clusCT")])
View(pData(sce1)[c("stage","clusCT")] %>% tibble::rownames_to_column("sample"))
library(stringr)
library(dplyr)
sce <- readRDS("/Users/ricard/data/gastrulation/expr/unprocessed/expr_sceset.rds")
sce <- calculateQCMetrics(sce)
sce <- updateSCESet(sce)
#4.5
sce1 <- scater::filter(sce, stage=="E6.75")
a <- read.table("/Users/ricard/data/gastrulation/sample_metadata/irene/metadata_E6.75.txt", stringsAsFactors=F, header=F)
colnames(a) <- c("sample","stage","batch","lineage","embryo")
irene_samples <- sapply(strsplit(a$sample,"_"), function(x) str_c(x[[1]],x[[4]],str_replace(x[[3]],"C","c"),sep="_"))
b <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/all_unassigned/E6.75.txt", stringsAsFactors=F, header=F)
colnames(b) <- c("sample","sample2","embryo","plate","stage","batch")
a
a <- read.table("/Users/ricard/data/gastrulation/sample_metadata/irene/metadata_E6.75.txt", stringsAsFactors=F, header=F)
colnames(a) <- c("sample","stage","batch","lineage","embryo")
irene_samples <- sapply(strsplit(a$sample,"_"), function(x) str_c(x[[1]],x[[4]],str_replace(x[[3]],"C","c"),sep="_"))
a <- read.table("/Users/ricard/data/gastrulation/sample_metadata/irene/metadata_E6.75.txt", stringsAsFactors=F, header=F)
colnames(a) <- c("sample","stage","batch","lineage","embryo")
irene_samples <- sapply(strsplit(a$sample,"_"), function(x) str_c(x[[1]],x[[4]],str_replace(x[[3]],"C","c"),sep="_"))
b <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/all_unassigned/E6.75.txt", stringsAsFactors=F, header=F)
colnames(b) <- c("sample","sample2","embryo","plate","stage","batch")
irene_samples %in% colnames(sce1)
# Check which samples florian has that irene has not included
# we will have to add them manually later
florian_samples <- data.frame(sample=colnames(sce1)[!colnames(sce1) %in% irene_samples],
cluster=sce1$clusCT[!colnames(sce1) %in% irene_samples])
View(florian_samples)
sce1$clusCT
c <- left_join(a[,!colnames(a) %in% c("batch")],b[,c("sample","plate","sample2","batch")],by="sample")
c <- c[,c("sample","sample2","stage","embryo","batch","lineage","plate")]
# Save and modify manually
View(c)
write.table(c, file="/Users/ricard/data/gastrulation/sample_metadata/ricard/expr_filtered_assigned/E6.75.txt", quote=F, sep="\t", row.names=F, col.names=F )
library(stringr)
library(dplyr)
sce <- readRDS("/Users/ricard/data/gastrulation/expr/unprocessed/expr_sceset.rds")
sce <- calculateQCMetrics(sce)
sce <- updateSCESet(sce)
#4.5
sce1 <- scater::filter(sce, stage=="E6.5")
a <- read.table("/Users/ricard/data/gastrulation/sample_metadata/irene/metadata_E6.5.txt", stringsAsFactors=F, header=F)
colnames(a) <- c("sample","stage","batch","lineage","embryo")
irene_samples <- sapply(strsplit(a$sample,"_"), function(x) str_c(x[[1]],x[[4]],str_replace(x[[3]],"C","c"),sep="_"))
a
View(a)
b <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/all_unassigned/E6.5.txt", stringsAsFactors=F, header=F)
colnames(b) <- c("sample","sample2","embryo","plate","stage","batch")
irene_samples %in% colnames(sce1)
a <- read.table("/Users/ricard/data/gastrulation/sample_metadata/irene/metadata_E6.5.txt", stringsAsFactors=F, header=F)
colnames(a) <- c("sample","stage","batch","lineage","embryo")
irene_samples <- sapply(strsplit(a$sample,"_"), function(x) str_c(x[[1]],x[[4]],str_replace(x[[3]],"C","c"),sep="_"))
View(a)
strsplit(a$sample,"_")
View(a)
a$sample
a <- read.table("/Users/ricard/data/gastrulation/sample_metadata/irene/metadata_E6.5.txt", stringsAsFactors=F, header=F)
colnames(a) <- c("sample","stage","batch","lineage","embryo")
irene_samples <- sapply(strsplit(a$sample,"_"), function(x) str_c(x[[1]],x[[4]],str_replace(x[[3]],"C","c"),sep="_"))
a
a$sample
strsplit(a$sample,"_")
a <- read.table("/Users/ricard/data/gastrulation/sample_metadata/irene/metadata_E6.5.txt", stringsAsFactors=F, header=F)
colnames(a) <- c("sample","stage","batch","lineage","embryo")
irene_samples <- sapply(strsplit(a$sample,"_"), function(x) str_c(x[[1]],x[[4]],str_replace(x[[3]],"C","c"),sep="_"))
b <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/all_unassigned/E6.5.txt", stringsAsFactors=F, header=F)
colnames(b) <- c("sample","sample2","embryo","plate","stage","batch")
irene_samples %in% colnames(sce1)
irene_samples[6]
View(pData(sce1)[c("stage","clusCT")] %>% tibble::rownames_to_column("sample"))
View(pData(sce1)[c("stage","clusCT")] %>% tibble::rownames_to_column("sample"))
irene_samples <- sapply(strsplit(a$sample,"_"), function(x) str_c(x[[1]],x[[4]],str_replace(x[[3]],"C","c"),sep="_"))
florian_samples <- data.frame(sample=colnames(sce1)[!colnames(sce1) %in% irene_samples],
cluster=sce1$clusCT[!colnames(sce1) %in% irene_samples])
View(florian_samples)
dim(sce1)
c <- left_join(a[,!colnames(a) %in% c("batch")],b[,c("sample","plate","sample2","batch")],by="sample")
c <- c[,c("sample","sample2","stage","embryo","batch","lineage","plate")]
View(c)
View(b)
View(a)
a <- read.table("/Users/ricard/data/gastrulation/sample_metadata/irene/metadata_E6.5.txt", stringsAsFactors=F, header=F)
colnames(a) <- c("sample","stage","batch","lineage","embryo")
irene_samples <- sapply(strsplit(a$sample,"_"), function(x) str_c(x[[1]],x[[4]],str_replace(x[[3]],"C","c"),sep="_"))
b <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/all_unassigned/E6.5.txt", stringsAsFactors=F, header=F)
colnames(b) <- c("sample","sample2","embryo","plate","stage","batch")
irene_samples %in% colnames(sce1)
c <- left_join(a[,!colnames(a) %in% c("batch")],b[,c("sample","plate","sample2","batch")],by="sample")
c <- c[,c("sample","sample2","stage","embryo","batch","lineage","plate")]
View(c)
View(b)
a <- read.table("/Users/ricard/data/gastrulation/sample_metadata/irene/metadata_E6.5.txt", stringsAsFactors=F, header=F)
colnames(a) <- c("sample","stage","batch","lineage","embryo")
irene_samples <- sapply(strsplit(a$sample,"_"), function(x) str_c(x[[1]],x[[4]],str_replace(x[[3]],"C","c"),sep="_"))
b <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/all_unassigned/E6.5.txt", stringsAsFactors=F, header=F)
colnames(b) <- c("sample","sample2","embryo","plate","stage","batch")
irene_samples %in% colnames(sce1)
c <- left_join(a[,!colnames(a) %in% c("batch")],b[,c("sample","plate","sample2","batch")],by="sample")
c <- c[,c("sample","sample2","stage","embryo","batch","lineage","plate")]
View(c)
# we will have to add them manually later
florian_samples <- data.frame(sample=colnames(sce1)[!colnames(sce1) %in% irene_samples],
cluster=sce1$clusCT[!colnames(sce1) %in% irene_samples])
View(florian_samples)
write.table(c, file="/Users/ricard/data/gastrulation/sample_metadata/ricard/expr_filtered_assigned/E6.5.txt", quote=F, sep="\t", row.names=F, col.names=F )
all <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/expr_filtered_assigned/all.txt", stringsAsFactors=F, header=F)
all <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/expr_filtered_assigned/all.txt", stringsAsFactors=F, header=T, sep="\t")
?read.table
all <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/expr_filtered_assigned/all.txt",
stringsAsFactors=F, header=T, sep="\t", comment.char="#")
all <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/expr_filtered_assigned/all.txt",
stringsAsFactors=F, header=T, sep="\t", comment.char="")
all <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/expr_filtered_assigned/all.txt",
stringsAsFactors=F, header=T, sep="\t", comment.char="")
all <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/expr_filtered_assigned/all.txt",
stringsAsFactors=F, header=T, sep="\t", comment.char="")
all <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/expr_filtered_assigned/all.txt",
stringsAsFactors=F, header=T, sep="\t", comment.char="#")
all <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/expr_filtered_assigned/all.txt",
stringsAsFactors=F, header=T, sep="\t", comment.char="#")
all <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/expr_filtered_assigned/all.txt",
stringsAsFactors=F, header=T, sep="\t", comment.char="")
all <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/expr_filtered_assigned/all.txt",
stringsAsFactors=F, header=T, sep="\t", comment.char="#")
all <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/expr_filtered_assigned/all.txt",
stringsAsFactors=F, header=T, sep="\t", comment.char="#")
View(all)
all <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/expr_filtered_assigned/all.txt",
stringsAsFactors=F, header=T, sep="\t", comment.char="#")
View(all)
tolower(colnames()
)
tolower(colnames(sce))
irene_samples <- tolower(sapply(strsplit(a$sample,"_"), function(x) str_c(x[[1]],x[[4]],x[[3]],sep="_")))
asd <- tolower(sapply(strsplit(all$sample,"_"), function(x) str_c(x[[1]],x[[4]],x[[3]],sep="_")))
all$sample
all <- read.table("/Users/ricard/data/gastrulation/sample_metadata/ricard/expr_filtered_assigned/all.txt",
stringsAsFactors=F, header=T, sep="\t", comment.char="#")
tolower(colnames(sce))
asd <- tolower(sapply(strsplit(all$sample,"_"), function(x) str_c(x[[1]],x[[4]],x[[3]],sep="_")))
asd
asd %in% tolower(colnames(sce))
asd[!asd %in% tolower(colnames(sce))]
"e3.5_embryo_cell181" %in% tolower(colnames(sce))
asd <- str_replace(asd,"embryo0","embryo")
asd[!asd %in% tolower(colnames(sce))]
asd
all$simpl_sample <- asd
View(all)
sce[all$simpl_sample,]
sce[,all$simpl_sample]
all$simpl_sample
all$simpl_sample %in% colnames(sce)
asd
asd %in% colnames(sce)
colnames(sce)
colnames(sce)
source("/Users/ricard/NOMe-seq/preprocessing/R/preprocess_functions.R")
library(data.table)
library(plyr)
library(R.utils)
source("/Users/ricard/NOMe-seq/preprocessing/R/preprocess_functions.R")
feat.files = paste0("data/feat/", list.files("data/feat", pattern = "bed"))
setwd("/Users/ricard/NOMe-seq/preprocessing")
source("R/preprocess_functions.R")
feat.files = paste0("data/feat/", list.files("data/feat", pattern = "bed"))
feat.files
feat.files = paste0("data/feat/", list.files("data/feat", pattern = "bed"))
feat.files = paste0("data/feat/merged/filt", list.files("data/feat/merged/filt", pattern = "bed"))
feat.files
getwd()
feat.files = paste0("/Users/ricard/NOMe-seq/data/feat/merged/filt", list.files("/Users/ricard/NOMe-seq/data/feat/merged/filt", pattern = "bed"))
feat = llply(feat.files, fread, select = 1:3)
feat.files
feat.files = paste0("/Users/ricard/NOMe-seq/data/feat/merged/filt", list.files("/Users/ricard/NOMe-seq/data/feat/merged/filt/", pattern = "bed"))
feat.files
feat.files = paste0("/Users/ricard/NOMe-seq/data/feat/merged/filt/", list.files("/Users/ricard/NOMe-seq/data/feat/merged/filt/", pattern = "bed"))
feat.files
?llply
feat = llply(feat.files, fread, select = 1:3)
class(feat)
?lapply
feat = llply(feat, function(x) { colnames(x) = c("chr", "Start", "End") return(x) })
feat[[1]]
feat = llply(feat, function(x) { colnames(x) = c("chr", "start", "end") return(x) })
?llply
feat = llply(feat, function(x) { colnames(x) = c("chr","start","end") })
feat[[1]]
feat = llply(feat, function(x) { colnames(x) = c("chr","start","end"); return(x) })
feat = llply(feat.files, fread, select = 1:3)
# feat = llply(feat, function(x) { colnames(x) = c("chr","start","end") return(x) })
feat = llply(feat, function(x) { colnames(x) = c("chr","start","end"); return(x) })
feat[[1]]
names(feat)
names(feat) = gsub(".bed", "", gsub("data/feat/", "", feat.files))
feat
names(feat)
annos <- sapply(list.files(dir, pattern = "bed"),strsplit,"[[",1)
dir <- "/Users/ricard/NOMe-seq/data/feat/merged/filt/"
annos <- sapply(list.files(dir, pattern = "bed"),strsplit,"[[",1)
annos
sapply(list.files(dir, pattern = "bed"),strsplit)
list.files(dir, pattern = "bed")
sapply(list.files(dir, pattern = "bed"),strsplit)
sapply(list.files(dir, pattern = "bed"),strsplit,"_")
annos <- sapply(list.files(dir, pattern = "bed"),strsplit,".","[[",1)
annos
annos <- sapply(list.files(dir, pattern = "bed"),strsplit,"\.","[[",1)
annos <- sapply(list.files(dir, pattern = "bed"),strsplit,"\\.","[[",1)
annos
annos <- sapply(list.files(dir, pattern = "bed"), function(x) strsplit(x,"\\.")[[1]])
annos
x=list.files(dir, pattern = "bed")[1]
x
strsplit(x,"\\.")
annos <- sapply(list.files(dir, pattern = "bed"), function(x) strsplit(x,"\\.")[[1]][1])
annos
?paste0
feat.files = paste0(dir,names(annos) )
feat.files
feat = llply(feat.files, fread, select = 1:3)
names(feat) = gsub(".bed", "", gsub("data/feat/", "", feat.files))
names(feat)
names(feat) = annos
names(feat)
feat = llply(feat, function(x) { colnames(x) = c("chr","start","end"); return(x) })
feat
names(lapply(feat, function(x) { colnames(x) = c("chr","start","end"); return(x) }))
names(llply(feat, function(x) { colnames(x) = c("chr","start","end"); return(x) }))
?l_ply
l_ply(feat, function(x) x[, chr := as.factor(gsub("chr", "", chr))])
feat[[1]]
feat[[1]]$chr
:=
?:=
?gsub
feat = llply(feat.files, fread, select = 1:3)
feat$chr
names(feat) = annos
feat = llply(feat, function(x) { colnames(x) = c("chr","start","end"); return(x) })
feat[[1]]$chr
l_ply(feat, function(x) x[, chr := as.factor(chr)])
feat[[1]]$chr
l_ply(feat, function(x) x[, chr := as.factor(gsub("chr", "", chr))])
# l_ply(feat, function(x) x[, chr := as.factor(chr)])
?setkey
class(feat[[1]])
a <- feat[[1]]
a
setkey(a)
a
a$sorted
sorted(a)
key(feat)
key(a)
?fread
genes = fread("data/rna/raw.counts.txt", colClasses = list(factor="Chromosome"), select = 1:4)
getwd()
genes = fread("/Users/ricard/NOMe-seq/data/rna/raw.counts.txt", colClasses = list(factor="Chromosome"), select = 1:4)
dim(genes)
setnames(genes, "Chromosome", "chr")
?setnames
library(data.table)
DT <- fread("~/GB_full.csv")
DT <- fread("~/downloads/GB_full.csv")
DT
colnames(DT)
rownames(DT)
sub_rows <- DT[V4 == "England" & V3 == "Beswick"]
sub_columns <- DT[,.(V2,V3,V4)]
?.()
.(V2,V3,V4)
head(DT[order(V4, -V8)])
?order
setorder(DT, V4, -VB)
head(setorder(DT, V4, -V8))
head(DT[order(V4, -V8)])
DT[, V_New := V10 + V11]
DT
?.=
?
''
DT[V8 == "Aberdeen City", V8 := "Abr City"]
DT
head(DT)
unique(DT$V8)
head8DT
head(DT)
DT[,c("V6","V7") := NULL ]
head(DT)
DT[,c(6,7) := NULL ]
head(DT)
DT[,.(V6,V7) := NULL ]
.(V6,V7)
DT[,c("V6","V7") := NULL ]
DT[,c(6,7) := NULL ]
DT[,.(V6,V7) := NULL ]
DT[,.(V6,V7)]
DT[,.(V2,V3,V4)]
colnames(DT)
head(DT)
DT[,.(V4) := NULL ]
head(dt)
head(DT)
colnames(DT)
DT[,.(V_New) := NULL ]
head(DT)
DT$v10
DT$V10
DT$V12
DT$V4
DT[, .(average = mean(V12)), by = V4]
DT[, .(average = mean(V12)), by = V4]
DT[, .N, by = V4]
setkey(DT,V4)
dt
DT[,.V4]
DT[,.(V4)]
DT[,"V4"]
DT[,4]
setkey(DT,V4)
DT[.(England)]
DT[.("England")]
setkey(DT, V3, V4)
DT[.("Shetland South Ward","Scotland")]
sub_columns <- DT[,V2]
sub_columns
DT[,.(V2)]
DT[,list(V2)] # data.table
DT[,"V2"] # vector
"V2"
DT[,"V2"] # vector
# What does .() do?
.(1,2,3)
list(1,2,3)
flights[, sum((arr_delay + dep_delay) < 0)]
DT[,c("V2","V3")]
DT[,c("V2","V3"), with=FALSE]
?with
- A deep copy on the other hand copies the entire data to another location in memory.
# Add columns by ref
flights[, sort(unique(hour))]
?".="
?":="
