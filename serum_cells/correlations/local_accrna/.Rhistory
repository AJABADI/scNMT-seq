legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
foo <- stats[,c("sample","nsites","context")] %>% setkey(context,nsites)
ggplot(foo, aes(x=sample, y=nsites, fill=context)) +
geom_bar(stat='identity', position="dodge") +
scale_fill_discrete(labels=c("CG methylation","GC accessibility")) +
ylab("Number of observed sites") +
theme(
axis.title.y = element_text(colour="black", size=20, margin=margin(0,20,0,0)),
axis.title.x = element_blank(),
axis.text.x = element_text(colour="black", angle=90, size=12, vjust=0.5, hjust=1.0),
axis.text.y = element_text(colour="black", size=12),
axis.ticks = element_line(colour="black"),
axis.line = element_line(colour="black", size=rel(0.9)),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
foo <- stats[,c("sample","nsites","context")] %>% setkey(context,nsites)
ggplot(foo, aes(x=sample, y=nsites, fill=context)) +
geom_bar(stat='identity', position="dodge") +
scale_y_continuous(expand=c(0,0)) +
scale_fill_discrete(labels=c("CG methylation","GC accessibility")) +
ylab("Number of observed sites") +
theme(
axis.title.y = element_text(colour="black", size=20, margin=margin(0,20,0,0)),
axis.title.x = element_blank(),
axis.text.x = element_text(colour="black", angle=90, size=12, vjust=0.5, hjust=1.0),
axis.text.y = element_text(colour="black", size=12),
axis.ticks = element_line(colour="black"),
axis.line = element_line(colour="black", size=rel(0.9)),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
foo <- stats[,c("sample","rate","context")]
ggplot(foo, aes(x=sample, y=nsites, fill=context)) +
geom_bar(stat='identity', position="dodge") +
scale_y_continuous(expand=c(0,0)) +
scale_fill_discrete(labels=c("CG methylation","GC accessibility")) +
ylab("Genome-wide mean rate") +
theme(
axis.title.y = element_text(colour="black", size=20, margin=margin(0,20,0,0)),
axis.title.x = element_blank(),
axis.text.x = element_text(colour="black", angle=90, size=12, vjust=0.5, hjust=1.0),
axis.text.y = element_text(colour="black", size=12),
axis.ticks = element_line(colour="black"),
axis.line = element_line(colour="black", size=rel(0.9)),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
foo <- stats[,c("sample","rate","context")]
ggplot(foo, aes(x=sample, y=rate, fill=context)) +
geom_bar(stat='identity', position="dodge") +
scale_y_continuous(expand=c(0,0)) +
scale_fill_discrete(labels=c("CG methylation","GC accessibility")) +
ylab("Genome-wide mean rate") +
theme(
axis.title.y = element_text(colour="black", size=20, margin=margin(0,20,0,0)),
axis.title.x = element_blank(),
axis.text.x = element_text(colour="black", angle=90, size=12, vjust=0.5, hjust=1.0),
axis.text.y = element_text(colour="black", size=12),
axis.ticks = element_line(colour="black"),
axis.line = element_line(colour="black", size=rel(0.9)),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
print(p)
foo <- stats[,c("sample","rate","context")]
ggplot(foo, aes(x=sample, y=rate, fill=context)) +
geom_bar(stat='identity', position="dodge") +
scale_y_continuous(expand=c(0,0)) +
scale_fill_discrete(labels=c("CG methylation","GC accessibility")) +
ylab("Genome-wide mean rate") +
theme(
axis.title.y = element_text(colour="black", size=20, margin=margin(0,20,0,0)),
axis.title.x = element_blank(),
axis.text.x = element_text(colour="black", angle=90, size=12, vjust=0.5, hjust=1.0),
axis.text.y = element_text(colour="black", size=12),
axis.ticks = element_line(colour="black"),
axis.line.x = element_line(colour="black", size=rel(0.9)),
axis.line.y = element_blank(),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
foo <- stats[,c("sample","rate","context")]
ggplot(foo, aes(x=sample, y=rate, fill=context)) +
geom_bar(stat='identity', position="dodge") +
scale_y_continuous(expand=c(0,0)) +
scale_fill_discrete(labels=c("CG methylation","GC accessibility")) +
ylab("Genome-wide mean rate") +
theme(
axis.title.y = element_text(colour="black", size=20, margin=margin(0,20,0,0)),
axis.title.x = element_blank(),
axis.text.x = element_text(colour="black", angle=90, size=12, vjust=0.5, hjust=1.0),
axis.text.y = element_text(colour="black", size=12),
axis.ticks = element_line(colour="black"),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
library(weights)
library(data.table)
library(purrr)
library(ggplot2)
# source("/Users/ricard/NMT-seq/Rutils/stats_utils.R")
boxplot_theme <- function() {
p <- theme(
plot.title = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(colour="black", size=20, vjust=1.5),
axis.text.x = element_text(colour="black",size=rel(1.7)),
axis.text.y = element_text(colour="black",size=rel(1.7)),
axis.line = element_line(colour="black", size=rel(0.7)),
axis.ticks.x = element_line(colour="black", size=rel(0.8)),
axis.ticks.y = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.position="top",
legend.text=element_text(size=15),
legend.title=element_blank(),
legend.background=element_blank(),
panel.border = element_blank()
)
}
opts <- list()
# Define which annotations to use and the order for plotting
opts$acc_annos <- c("prom_100_100","prom_100_100_cgi","prom_100_100_noncgi","prom_100_100_active","prom_100_100_inactive","prom_100_100_poised","genebody","exons","introns","genebody","active_enhancers","super_enhancers","primed_enhancers","CTCF","Nanog","Oct4","IAP","DHS","CGI")
opts$met_annos <- c("prom_2000_2000","prom_2000_2000_cgi","prom_2000_2000_noncgi","prom_2000_2000_active","prom_2000_2000_inactive","prom_2000_2000_poised","exons","introns","genebody","active_enhancers","super_enhancers","primed_enhancers","CTCF","Nanog","Oct4","IAP","DHS","CGI")
# Filter features with low coverage
opts$min_weight <- 1
opts$min_cov <- 0.5
met <- fread("zcat < /Users/ricard/data/NMT-seq/met/parsed/allele_unspecific/met_data.tsv.gz") %>% .[anno %in% opts$met_annos] %>% .[,context:="CG"]
acc <- fread("zcat < /Users/ricard/data/NMT-seq/dna/parsed/allele_unspecific/dna_data.tsv.gz") %>% .[anno %in% opts$acc_annos] %>% .[,context:="GC"]
metacc <- rbind(met,acc)
# Keep sites with at least weight opts$min_weight in at least opts$min_cov fraction of cells
ncells <- length(unique(metacc$sample))
keep_id <- metacc[,.(cov=sum(weight>=opts$min_weight)/ncells),by=c("id","anno","context")] %>% split(.$anno) %>% map(function(x) x[cov>=opts$min_cov] %>% .$id)
metacc <- map2(metacc %>% split(.$anno), keep_id, function(x,y) x[id%in%y]) %>% rbindlist
feature_stats <- metacc[,.(mean=mean(rate, na.rm=T), wtd_mean=weighted.mean(rate, weight, na.rm=T),
var=var(rate, na.rm=T), wtd_var=wtd.var(rate, weight, na.rm=T),
weight=sum(weight) ), by=c("anno","id","context")]
# Rename annotations for plotting
feature_stats[,anno:=stringr::str_replace_all(anno,c("prom_100_100"="Promoters", "prom_100_100_cgi"="CGI promoters", "prom_100_100_noncgi"="non-CGI promoters", "prom_100_100_active"="Active promoters", "prom_100_100_inactive"="Inactive promoters", "prom_100_100_poised"="Poised promoters", "genebody"="Gene body", "exons"="Exons", "introns"="Introns", "active_enhancers"="Active enhancers", "super_enhancers"="Super enhancers", "primed_enhancers"="Primed enhancers", "prom_2000_2000"="Promoters", "prom_2000_2000_cgi"="CGI promoters", "prom_2000_2000_noncgi"="non-CGI promoters", "prom_2000_2000_active"="Active promoters", "prom_2000_2000_inactive"="Inactive promoters", "prom_2000_2000_poised"="Poised promoters"))]
tmp <- feature_stats[,.N,by=c("anno","context")] %>% .[,fill:=anno]
p <- ggplot(tmp, aes(x=anno,y=N,fill=context)) +
geom_bar(stat='identity', position="dodge") +
xlab("") + ylab("Number of features") +
barplot_theme() +
coord_flip() +
scale_y_continuous(expand=c(0,0)) +
scale_fill_discrete(labels = c("CG methylation","GC accessibility")) +
theme(
axis.text.x = element_text(colour="black",size=rel(1.5)),
axis.text.y = element_text(colour="black",size=rel(1.5), vjust=0.5),
axis.title.x = element_text(colour="black",size=15),
axis.ticks.y = element_line(colour="black", size=rel(1.2)),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15)
)
tmp <- feature_stats[,.N,by=c("anno","context")] %>% .[,fill:=anno]
p <- ggplot(tmp, aes(x=anno,y=N,fill=context)) +
geom_bar(stat='identity', position="dodge") +
xlab("") + ylab("Number of features") +
coord_flip() +
scale_y_continuous(expand=c(0,0)) +
scale_fill_discrete(labels = c("CG methylation","GC accessibility")) +
theme(
axis.text.x = element_text(colour="black",size=rel(1.5)),
axis.text.y = element_text(colour="black",size=rel(1.5), vjust=0.5),
axis.title.x = element_text(colour="black",size=15),
axis.ticks.y = element_line(colour="black", size=rel(1.2)),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15)
)
p
knitr::kable( tmp %>% dcast(anno~context,value.var="N") )
tmp <- feature_stats[,.N,by=c("anno","context")] %>% .[,fill:=anno]
p <- ggplot(tmp, aes(x=anno,y=N,fill=context)) +
geom_bar(stat='identity', position="dodge") +
xlab("") + ylab("Number of features") +
coord_flip() +
scale_y_continuous(expand=c(0,0)) +
scale_fill_discrete(labels = c("CG methylation","GC accessibility")) +
theme(
axis.text.x = element_text(colour="black",size=rel(1.5)),
axis.text.y = element_text(colour="black",size=rel(1.5), vjust=0.5),
axis.title.x = element_text(colour="black",size=15),
axis.ticks.y = element_line(colour="black", size=rel(1.2)),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15)
panel.background = element_blank(),
tmp <- feature_stats[,.N,by=c("anno","context")] %>% .[,fill:=anno]
p <- ggplot(tmp, aes(x=anno,y=N,fill=context)) +
geom_bar(stat='identity', position="dodge") +
xlab("") + ylab("Number of features") +
coord_flip() +
scale_y_continuous(expand=c(0,0)) +
scale_fill_discrete(labels = c("CG methylation","GC accessibility")) +
theme(
axis.text.x = element_text(colour="black",size=rel(1.5)),
axis.text.y = element_text(colour="black",size=rel(1.5), vjust=0.5),
axis.title.x = element_text(colour="black",size=15),
axis.ticks.y = element_line(colour="black", size=rel(1.2)),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
p
knitr::kable( tmp %>% dcast(anno~context,value.var="N") )
boxplot_theme <- function() {
p <- theme(
plot.title = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(colour="black", size=20, vjust=1.5),
axis.text.x = element_text(colour="black",size=rel(1.7)),
axis.text.y = element_text(colour="black",size=rel(1.7)),
axis.line = element_line(colour="black", size=rel(0.7)),
axis.ticks.x = element_line(colour="black", size=rel(0.8)),
axis.ticks.y = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.position="top",
legend.text=element_text(size=15),
legend.title=element_blank(),
legend.background=element_blank(),
panel.border = element_blank()
)
}
p <- ggplot(feature_stats[context=="CG",c("anno","var")], aes(x=anno, y=var)) +
geom_boxplot(fill="#F8766D", alpha=0.8, coef=0, outlier.shape=NA) +
ggtitle("") + xlab("") + ylab("Cell-to-cell variance on the methylation rate") +
coord_flip() +
scale_y_continuous(limits=c(0,1500)) +
boxplot_theme() +
theme(
axis.text.x = element_text(colour="black",size=rel(1.7)),
axis.text.y = element_text(colour="black",size=rel(1.5), vjust=0.5),
axis.title.x = element_text(colour="black",size=15),
axis.ticks.y = element_line(colour="black", size=rel(1.2)),
legend.position="none"
)
p
p <- ggplot(feature_stats[context=="GC",c("anno","var")], aes(x=anno, y=var)) +
geom_boxplot(fill="#00BFC4", alpha=0.8, coef=0, outlier.shape=NA) +
ggtitle("") + xlab("") + ylab("Cell-to-cell variance on the methylation rate") +
coord_flip() +
scale_y_continuous(limits=c(0,1500)) +
boxplot_theme() +
theme(
axis.text.x = element_text(colour="black",size=rel(1.7)),
axis.text.y = element_text(colour="black",size=rel(1.5), vjust=0.5),
axis.title.x = element_text(colour="black",size=15),
axis.ticks.y = element_line(colour="black", size=rel(1.2)),
legend.position="none"
)
p
p <- ggplot(feature_stats[,c("anno","var","context")], aes(x=anno,y=var,fill=context)) +
geom_boxplot(alpha=0.8, coef=0, outlier.shape=NA) +
xlab("") + ylab("Cell-to-cell variance on the rate") +
coord_flip() + scale_y_continuous(limits=c(0,1500)) +
scale_fill_discrete(labels = c("CG methylation","GC accessibility")) +
boxplot_theme() +
theme(
axis.text.x = element_text(colour="black",size=rel(1.7)),
axis.text.y = element_text(colour="black",size=rel(1.5), vjust=0.5),
axis.title.x = element_text(colour="black",size=15),
axis.ticks.y = element_line(colour="black", size=rel(1.2)),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15)
)
p
library(weights)
library(data.table)
library(purrr)
library(ggplot2)
# source("/Users/ricard/NMT-seq/Rutils/stats_utils.R")
boxplot_theme <- function() {
p <- theme(
plot.title = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_text(colour="black", size=20, vjust=1.5),
axis.text.x = element_text(colour="black",size=rel(1.7)),
axis.text.y = element_text(colour="black",size=rel(1.7)),
axis.line = element_line(colour="black", size=rel(0.7)),
axis.ticks.x = element_line(colour="black", size=rel(0.8)),
axis.ticks.y = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.position="top",
legend.text=element_text(size=15),
legend.title=element_blank(),
legend.background=element_blank(),
panel.border = element_blank()
)
}
opts <- list()
# Define which annotations to use and the order for plotting
opts$acc_annos <- c("prom_100_100","prom_100_100_cgi","prom_100_100_noncgi","prom_100_100_active","prom_100_100_inactive","prom_100_100_poised","genebody","exons","introns","genebody","active_enhancers","super_enhancers","primed_enhancers","CTCF","Nanog","Oct4","IAP","DHS","CGI")
opts$met_annos <- c("prom_2000_2000","prom_2000_2000_cgi","prom_2000_2000_noncgi","prom_2000_2000_active","prom_2000_2000_inactive","prom_2000_2000_poised","exons","introns","genebody","active_enhancers","super_enhancers","primed_enhancers","CTCF","Nanog","Oct4","IAP","DHS","CGI")
# Filter features with low coverage
opts$min_weight <- 1
opts$min_cov <- 0.5
met <- fread("zcat < /Users/ricard/data/NMT-seq/met/parsed/allele_unspecific/met_data.tsv.gz") %>% .[anno %in% opts$met_annos] %>% .[,context:="CG"]
acc <- fread("zcat < /Users/ricard/data/NMT-seq/dna/parsed/allele_unspecific/dna_data.tsv.gz") %>% .[anno %in% opts$acc_annos] %>% .[,context:="GC"]
metacc <- rbind(met,acc)
# Keep sites with at least weight opts$min_weight in at least opts$min_cov fraction of cells
ncells <- length(unique(metacc$sample))
keep_id <- metacc[,.(cov=sum(weight>=opts$min_weight)/ncells),by=c("id","anno","context")] %>% split(.$anno) %>% map(function(x) x[cov>=opts$min_cov] %>% .$id)
metacc <- map2(metacc %>% split(.$anno), keep_id, function(x,y) x[id%in%y]) %>% rbindlist
feature_stats <- metacc[,.(mean=mean(rate, na.rm=T), var=var(rate, na.rm=T)), by=c("anno","id","context")]
# feature_stats <- metacc[,.(mean=mean(rate, na.rm=T), wtd_mean=weighted.mean(rate, weight, na.rm=T),
#                var=var(rate, na.rm=T), wtd_var=wtd.var(rate, weight, na.rm=T),
#                weight=sum(weight) ), by=c("anno","id","context")]
# Rename annotations for plotting
feature_stats[,anno:=stringr::str_replace_all(anno,c("prom_100_100"="Promoters", "prom_100_100_cgi"="CGI promoters", "prom_100_100_noncgi"="non-CGI promoters", "prom_100_100_active"="Active promoters", "prom_100_100_inactive"="Inactive promoters", "prom_100_100_poised"="Poised promoters", "genebody"="Gene body", "exons"="Exons", "introns"="Introns", "active_enhancers"="Active enhancers", "super_enhancers"="Super enhancers", "primed_enhancers"="Primed enhancers", "prom_2000_2000"="Promoters", "prom_2000_2000_cgi"="CGI promoters", "prom_2000_2000_noncgi"="non-CGI promoters", "prom_2000_2000_active"="Active promoters", "prom_2000_2000_inactive"="Inactive promoters", "prom_2000_2000_poised"="Poised promoters"))]
tmp <- feature_stats[,.N,by=c("anno","context")] %>% .[,fill:=anno]
p <- ggplot(tmp, aes(x=anno,y=N,fill=context)) +
geom_bar(stat='identity', position="dodge") +
xlab("") + ylab("Number of features") +
coord_flip() +
scale_y_continuous(expand=c(0,0)) +
scale_fill_discrete(labels = c("CG methylation","GC accessibility")) +
theme(
axis.text.x = element_text(colour="black",size=rel(1.5)),
axis.text.y = element_text(colour="black",size=rel(1.5), vjust=0.5),
axis.title.x = element_text(colour="black",size=15),
axis.ticks.y = element_line(colour="black", size=rel(1.2)),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
p
knitr::kable( tmp %>% dcast(anno~context,value.var="N") )
p <- ggplot(feature_stats[context=="CG",c("anno","wtd_mean")], aes(x=anno, y=mean)) +
geom_boxplot(fill="#F8766D", alpha=0.8, coef=0, outlier.shape=NA) +
ggtitle("") + xlab("") + ylab("Mean methylation rate") +
coord_flip() +
scale_y_continuous(limits=c(0,100)) +
boxplot_theme()
p <- ggplot(feature_stats[context=="CG",c("anno","mean")], aes(x=anno, y=mean)) +
geom_boxplot(fill="#F8766D", alpha=0.8, coef=0, outlier.shape=NA) +
ggtitle("") + xlab("") + ylab("Mean methylation rate") +
coord_flip() +
scale_y_continuous(limits=c(0,100)) +
boxplot_theme()
p
p <- ggplot(feature_stats[context=="GC",c("anno","mean")], aes(x=anno, y=mean)) +
geom_boxplot(fill="#00BFC4", alpha=0.8, coef=0, outlier.shape=NA) +
ggtitle("") + xlab("") + ylab("Mean accessibility rate") +
scale_y_continuous(limits=c(0,100)) +
coord_flip() +
boxplot_theme()
p
p <- ggplot(feature_stats[context=="CG",c("anno","var")], aes(x=anno, y=var)) +
geom_boxplot(fill="#F8766D", alpha=0.8, coef=0, outlier.shape=NA) +
ggtitle("") + xlab("") + ylab("Cell-to-cell variance on the methylation rate") +
coord_flip() +
scale_y_continuous(limits=c(0,1500)) +
boxplot_theme() +
theme(
axis.text.x = element_text(colour="black",size=rel(1.7)),
axis.text.y = element_text(colour="black",size=rel(1.5), vjust=0.5),
axis.title.x = element_text(colour="black",size=15),
axis.ticks.y = element_line(colour="black", size=rel(1.2)),
legend.position="none"
)
p
p <- ggplot(feature_stats[context=="GC",c("anno","var")], aes(x=anno, y=var)) +
geom_boxplot(fill="#00BFC4", alpha=0.8, coef=0, outlier.shape=NA) +
ggtitle("") + xlab("") + ylab("Cell-to-cell variance on the methylation rate") +
coord_flip() +
scale_y_continuous(limits=c(0,1500)) +
boxplot_theme() +
theme(
axis.text.x = element_text(colour="black",size=rel(1.7)),
axis.text.y = element_text(colour="black",size=rel(1.5), vjust=0.5),
axis.title.x = element_text(colour="black",size=15),
axis.ticks.y = element_line(colour="black", size=rel(1.2)),
legend.position="none"
)
p
p <- ggplot(feature_stats[,c("anno","var","context")], aes(x=anno,y=var,fill=context)) +
geom_boxplot(alpha=0.8, coef=0, outlier.shape=NA) +
xlab("") + ylab("Cell-to-cell variance on the rate") +
coord_flip() + scale_y_continuous(limits=c(0,1500)) +
scale_fill_discrete(labels = c("CG methylation","GC accessibility")) +
boxplot_theme() +
theme(
axis.text.x = element_text(colour="black",size=rel(1.7)),
axis.text.y = element_text(colour="black",size=rel(1.5), vjust=0.5),
axis.title.x = element_text(colour="black",size=15),
axis.ticks.y = element_line(colour="black", size=rel(1.2)),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15)
)
p
library(data.table)
library(purrr)
library(ggplot2)
io <- list()
opts <- list()
if (grepl("ricard",Sys.info()['nodename'])) {
io$in.metadata <- "/Users/ricard/data/NMT-seq/sample_info.txt"
io$in.acc_data <- "/Users/ricard/data/NMT-seq/acc/raw/allele_unspecific/"
io$in.met_data <- "/Users/ricard/data/NMT-seq/met/raw/allele_unspecific/"
io$stats <- "/Users/ricard/NMT-seq/stats/samples/sample_stats.txt"
} else {
io$basedir <- "/hps/nobackup/stegle/users/ricard/NMT-seq"
io$in.metadata <- paste0(io$basedir,"/sample_info.txt")
io$in.acc_data <- paste0(io$basedir,"/acc/raw/allele_unspecific/")
io$in.met_data <- paste0(io$basedir,"/acc/raw/allele_unspecific/")
io$stats <- "/homes/ricard/NOME-seq/stats/samples/sample_stats.txt"
}
# Define which cells to use
opts$cells <- "all"
if (opts$cells == "all")
opts$cells <- fread(io$in.metadata) %>% .[passQC_acc==T & passQC_met==T,sample]
# opts$cells <- head(opts$cells,n=10)
stats <- fread(io$stats)
View(stats)
opts$cells <- "all"
if (opts$cells == "all")
opts$cells <- fread(io$in.metadata) %>% .[passQC_acc==T & passQC_met==T,sample]
opts$cells
stats
stats[sample %in% opts$cells]
asd <- stats[sample %in% opts$cells]
asd <- stats[sample %in% opts$cells & context=="CG"]
View(asd)
mean(asd$mean)
