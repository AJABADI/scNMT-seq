remove_n_sites <- acc_filt[,.(N=min(.N)), by=c("id","culture")] %>% .[N<opts$min.n,id]
acc_filt <- acc_filt[!id %in% remove_n_sites]
opts$threshold_fdr <- 0.05
# Normal assumption
mean.stat <- acc_filt[, .(N1 = .SD[culture=="Serum",.N], N2 = .SD[culture=="2i",.N],
diff = mean(.SD[culture=="Serum",rate]) - mean(.SD[culture=="2i",rate]),
p.value = t.test(x=.SD[culture=="Serum",rate], y=.SD[culture=="2i",rate], var.equal=FALSE)[["p.value"]]), by = c("id")] %>%
.[, c("padj_fdr") := list(p.adjust(p.value, method = "fdr"))] %>%
.[, c("log_padj_fdr") := list(-log10(padj_fdr))] %>%
.[, sig := padj_fdr <= opts$threshold_fdr] %>%  setorder(padj_fdr)
acc_filt <- acc_filt[,N:=min(.N), by=c("id","culture")] %>% .[N<opts$min.n]
acc_filt <- acc_dt
opts$min.weight <- 5
acc_filt <- acc_filt[weight >= opts$min.weight]
opts$min.coverage <- 0.5
acc_filt <- acc_filt[, cov:=.N/length(opts$cells), by=c("id")] %>% .[cov >= opts$min.coverage] %>% .[,cov:=NULL]
opts$min.n <- 10
acc_filt <- acc_filt[,N:=unique(.N), by=c("id","culture")] %>% .[N>opts$min.n]
head(acc_filt)
opts$threshold_fdr <- 0.05
# Normal assumption
mean.stat <- acc_filt[, .(N1 = .SD[culture=="Serum",.N], N2 = .SD[culture=="2i",.N],
diff = mean(.SD[culture=="Serum",rate]) - mean(.SD[culture=="2i",rate]),
p.value = t.test(x=.SD[culture=="Serum",rate], y=.SD[culture=="2i",rate], var.equal=FALSE)[["p.value"]]), by = c("id")] %>%
.[, c("padj_fdr") := list(p.adjust(p.value, method = "fdr"))] %>%
.[, c("log_padj_fdr") := list(-log10(padj_fdr))] %>%
.[, sig := padj_fdr <= opts$threshold_fdr] %>%  setorder(padj_fdr)
acc_filt[,N:=unique(.N), by=c("id","culture")]
hist(acc_filt)
acc_filt[,.N, by=c("id","culture")]
acc_filt[,N:=.N, by=c("id","culture")]
head(acc_filt)
head(acc_filt,n=1000) %>% View
min(acc_filt[,N])
unique(acc_filt$culture)
asd =  acc_filt[,N:=.N, by=c("id","culture","anno")] %>% .[N>opts$min.n] %>% .[,N:=NULL] %>%
.[,N=unique(culture),by=c("id","anno")]
asd =  acc_filt[,N:=.N, by=c("id","culture","anno")] %>% .[N>opts$min.n] %>% .[,N:=NULL] %>%
.[,.(N=sum(unique(culture))),by=c("id","anno")]
head(asd)
head(asd)
asd = acc_filt[,N:=.N, by=c("id","culture","anno")] %>% .[N>opts$min.n] %>% .[,N:=NULL] %>%
.[,.(N=length(unique(culture)))
)
asd = acc_filt[,N:=.N, by=c("id","culture","anno")] %>% .[N>opts$min.n] %>% .[,N:=NULL] %>%
.[,.(N=length(unique(culture))),by=c("id","anno")]
head(asd)
unique(asd$N)
acc_filt <- acc_filt[,N:=.N, by=c("id","culture","anno")] %>% .[N>opts$min.n] %>% .[,N:=NULL] %>%
.[,.(N=length(unique(culture))),by=c("id","anno")] %>% .[N==2] %>% .[,N:=NULL] %>%
acc_filt <- acc_filt[,n:=ifelse(culture=="2i",sum(culture=="2i"),), by=c("culture","id","anno")] %>% .[n>=opts$min.windows] %>% .[,n:=NULL]
acc_filt <- acc_filt[,N:=.N, by=c("id","culture","anno")] %>% .[N>opts$min.n] %>% .[,N:=NULL] %>%
.[,.(N=length(unique(culture))),by=c("id","anno")] %>% .[N==2] %>% .[,N:=NULL]
opts$threshold_fdr <- 0.05
# Normal assumption
mean.stat <- acc_filt[, .(N1 = .SD[culture=="Serum",.N], N2 = .SD[culture=="2i",.N],
diff = mean(.SD[culture=="Serum",rate]) - mean(.SD[culture=="2i",rate]),
p.value = t.test(x=.SD[culture=="Serum",rate], y=.SD[culture=="2i",rate], var.equal=FALSE)[["p.value"]]), by = c("id","anno")] %>%
.[, c("padj_fdr") := list(p.adjust(p.value, method = "fdr"))] %>%
.[, c("log_padj_fdr") := list(-log10(padj_fdr))] %>%
.[, sig := padj_fdr <= opts$threshold_fdr] %>%  setorder(padj_fdr)
View(sample_metadata)
library(scater)
library(data.table)
library(purrr)
library(ggplot2)
scatter_theme <- function(){
p <- theme(
plot.title=element_text(size=28, face='bold', margin=margin(0,0,10,0), hjust=0.5),
axis.text=element_text(size=rel(1.75), color='black'),
axis.title=element_text(size=rel(1.95), color='black'),
axis.title.y = element_text(margin=margin(0,10,0,0)),
axis.title.x = element_text(margin=margin(10,0,0,0)),
legend.position="none",
panel.border=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()
)
}
boxplot_theme <- function() {
p <- theme(
plot.title = element_text(size=30, hjust=0.5, margin=margin(0,0,20,0)),
axis.title.y = element_text(colour="black", size=20, vjust=1.5),
axis.title.x = element_text(colour="black", size=20, vjust=1.5, margin=margin(15,0,0,0)),
axis.text.x = element_text(colour="black",size=rel(1.6)),
axis.text.y = element_text(colour="black",size=rel(1.6)),
axis.line = element_line(colour="black", size=rel(0.7)),
axis.ticks.x = element_line(colour="black", size=rel(0.8)),
axis.ticks.y = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.position="none",
legend.text=element_text(size=15),
legend.title=element_blank(),
legend.background=element_blank(),
panel.border = element_blank()
)
}
io <- list()
if (grepl("ricard",Sys.info()['nodename'])) {
io$basedir <- "/Users/ricard/data/NMT-seq"
io$outdir <- "/Users/ricard/NMT-seq/rebuttal/differential/out"
} else {
stop()
}
io$in.sample_metadata <- paste0(io$basedir,"/sample_info_all.txt")
io$acc.infile <- paste(io$basedir,"/acc/parsed/acc_data.tsv.gz",sep="/")
# io$rna.infile <- paste(io$basedir,"rna/parsed/allele_unspecific/sceset_all.rds",sep="/")
opts <- list()
# Define which annotations to use
opts$annos <- c("prom_100_100", "active_enhancers", "super_enhancers", "CTCF", "exons", "introns")
# Define which cells to use
opts$cells <- fread(io$in.sample_metadata, header=T) %>% .[pass_accQC==T,sample]
sample_metadata <- fread(io$in.sample_metadata) %>% .[sample%in%opts$cells]
acc_dt <- fread(sprintf("zcat < %s", io$acc.infile)) %>% as.data.table %>%
.[anno%in%opts$annos & sample%in%opts$cells] %>%
.[,anno:=factor(anno, levels=opts$annos)]
acc_dt <- merge(acc_dt, sample_metadata[,c("sample","culture")], by="sample")
acc_filt <- acc_dt
# Remove features with low weight (all types of correlation)
opts$min.weight <- 5
acc_filt <- acc_filt[weight >= opts$min.weight]
# Filter sites with low coverage
opts$min.coverage <- 0.5
acc_filt <- acc_filt[, cov:=.N/length(opts$cells), by=c("id")] %>% .[cov >= opts$min.coverage] %>% .[,cov:=NULL]
# Filter features by minimum number of cells per culture
opts$min.n <- 7
acc_filt <- acc_filt[,N:=.N, by=c("id","culture","anno")] %>% .[N>opts$min.n] %>% .[,N:=NULL] %>%
.[,N:=length(unique(culture)),by=c("id","anno")] %>% .[N==2] %>% .[,N:=NULL]
opts$threshold_fdr <- 0.05
# Normal assumption
mean.stat <- acc_filt[, .(N1 = .SD[culture=="Serum",.N], N2 = .SD[culture=="2i",.N],
diff = mean(.SD[culture=="Serum",rate]) - mean(.SD[culture=="2i",rate]),
p.value = t.test(x=.SD[culture=="Serum",rate], y=.SD[culture=="2i",rate], var.equal=FALSE)[["p.value"]]), by = c("id","anno")] %>%
.[, c("padj_fdr") := list(p.adjust(p.value, method = "fdr"))] %>%
.[, c("log_padj_fdr") := list(-log10(padj_fdr))] %>%
.[, sig := padj_fdr <= opts$threshold_fdr] %>%  setorder(padj_fdr)
View(mean.stat)
library(scater)
library(data.table)
library(purrr)
library(ggplot2)
scatter_theme <- function(){
p <- theme(
plot.title=element_text(size=28, face='bold', margin=margin(0,0,10,0), hjust=0.5),
axis.text=element_text(size=rel(1.75), color='black'),
axis.title=element_text(size=rel(1.95), color='black'),
axis.title.y = element_text(margin=margin(0,10,0,0)),
axis.title.x = element_text(margin=margin(10,0,0,0)),
legend.position="none",
panel.border=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()
)
}
boxplot_theme <- function() {
p <- theme(
plot.title = element_text(size=30, hjust=0.5, margin=margin(0,0,20,0)),
axis.title.y = element_text(colour="black", size=20, vjust=1.5),
axis.title.x = element_text(colour="black", size=20, vjust=1.5, margin=margin(15,0,0,0)),
axis.text.x = element_text(colour="black",size=rel(1.6)),
axis.text.y = element_text(colour="black",size=rel(1.6)),
axis.line = element_line(colour="black", size=rel(0.7)),
axis.ticks.x = element_line(colour="black", size=rel(0.8)),
axis.ticks.y = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.position="none",
legend.text=element_text(size=15),
legend.title=element_blank(),
legend.background=element_blank(),
panel.border = element_blank()
)
}
io <- list()
if (grepl("ricard",Sys.info()['nodename'])) {
io$basedir <- "/Users/ricard/data/NMT-seq"
io$outdir <- "/Users/ricard/NMT-seq/rebuttal/differential/out"
} else {
stop()
}
io$in.sample_metadata <- paste0(io$basedir,"/sample_info_all.txt")
io$acc.infile <- paste(io$basedir,"/acc/parsed/acc_data.tsv.gz",sep="/")
# io$rna.infile <- paste(io$basedir,"rna/parsed/allele_unspecific/sceset_all.rds",sep="/")
opts <- list()
# Define which annotations to use
opts$annos <- c("prom_100_100", "active_enhancers", "super_enhancers", "DHS")
# Define which cells to use
opts$cells <- fread(io$in.sample_metadata, header=T) %>% .[pass_accQC==T,sample]
sample_metadata <- fread(io$in.sample_metadata) %>% .[sample%in%opts$cells]
acc_dt <- fread(sprintf("zcat < %s", io$acc.infile)) %>% as.data.table %>%
.[anno%in%opts$annos & sample%in%opts$cells] %>%
.[,anno:=factor(anno, levels=opts$annos)]
acc_dt <- merge(acc_dt, sample_metadata[,c("sample","culture")], by="sample")
acc_filt <- acc_dt
# Remove features with low weight (all types of correlation)
opts$min.weight <- 5
acc_filt <- acc_filt[weight >= opts$min.weight]
# Filter sites with low coverage
opts$min.coverage <- 0.5
acc_filt <- acc_filt[, cov:=.N/length(opts$cells), by=c("id")] %>% .[cov >= opts$min.coverage] %>% .[,cov:=NULL]
# Filter features by minimum number of cells per culture
opts$min.n <- 7
acc_filt <- acc_filt[,N:=.N, by=c("id","culture","anno")] %>% .[N>opts$min.n] %>% .[,N:=NULL] %>%
.[,N:=length(unique(culture)),by=c("id","anno")] %>% .[N==2] %>% .[,N:=NULL]
opts$threshold_fdr <- 0.05
# Normal assumption
out <- acc_filt[, .(N1 = .SD[culture=="Serum",.N], N2 = .SD[culture=="2i",.N],
diff = mean(.SD[culture=="Serum",rate]) - mean(.SD[culture=="2i",rate]),
p.value = t.test(x=.SD[culture=="Serum",rate], y=.SD[culture=="2i",rate], var.equal=FALSE)[["p.value"]]), by = c("id","anno")] %>%
.[, c("padj_fdr") := list(p.adjust(p.value, method = "fdr")), by="anno"] %>%
.[, c("log_padj_fdr") := list(-log10(padj_fdr))] %>%
.[, sig := padj_fdr <= opts$threshold_fdr] %>%  setorder(padj_fdr)
View(out)
tmp <- head(out,n=5)
for (i in 1:nrow(tmp)) {
foo <- acc_filt[id==tmp[i,id]] %>% setkey(culture,rate) %>% .[,sample:=factor(sample,levels=sample)]
p <- ggplot(foo, aes(x=culture, y=rate)) +
geom_jitter(aes(color=culture), size=2.0) +
geom_boxplot(aes(fill=culture), alpha=0.5, outlier.shape=NA) +
boxplot_theme() +
theme(
plot.title = element_text(size=rel(1.5), hjust=0.5, vjust=0)
)
# pdf(sprintf("%s/%s_%s_%s.pdf",io$outdir,tmp[i,anno],tmp[i,id],tmp[i,gene]))
print(p)
# dev.off()
}
opts$min.n <- 8
acc_filt <- acc_filt[,N:=.N, by=c("id","culture","anno")] %>% .[N>opts$min.n] %>% .[,N:=NULL] %>%
.[,N:=length(unique(culture)),by=c("id","anno")] %>% .[N==2] %>% .[,N:=NULL]
opts$threshold_fdr <- 0.05
# Normal assumption
out <- acc_filt[, .(N1 = .SD[culture=="Serum",.N], N2 = .SD[culture=="2i",.N],
diff = mean(.SD[culture=="Serum",rate]) - mean(.SD[culture=="2i",rate]),
p.value = t.test(x=.SD[culture=="Serum",rate], y=.SD[culture=="2i",rate], var.equal=FALSE)[["p.value"]]), by = c("id","anno")] %>%
.[, c("padj_fdr") := list(p.adjust(p.value, method = "fdr")), by="anno"] %>%
.[, c("log_padj_fdr") := list(-log10(padj_fdr))] %>%
.[, sig := padj_fdr <= opts$threshold_fdr] %>%  setorder(padj_fdr)
View(out)
tmp <- head(out,n=5)
for (i in 1:nrow(tmp)) {
foo <- acc_filt[id==tmp[i,id]] %>% setkey(culture,rate) %>% .[,sample:=factor(sample,levels=sample)]
p <- ggplot(foo, aes(x=culture, y=rate)) +
geom_jitter(aes(color=culture), size=2.0) +
geom_boxplot(aes(fill=culture), alpha=0.5, outlier.shape=NA) +
boxplot_theme() +
theme(
plot.title = element_text(size=rel(1.5), hjust=0.5, vjust=0)
)
# pdf(sprintf("%s/%s_%s_%s.pdf",io$outdir,tmp[i,anno],tmp[i,id],tmp[i,gene]))
print(p)
# dev.off()
}
out
top <- 50
View(out)
impute <- function(d, margin) {
if (margin == 1)
means <- rowMeans(d, na.rm=T)
else if (margin == 2)
means <- colMeans(d, na.rm=T)
else
stop("Margin has to be either 1 (rows) or 2 (cols)")
if (any(is.na(means))) {
stop('Insufficient data for mean imputation!')
}
for (i in 1:length(means)) {
if (margin == 1)
d[i,is.na(d[i,])] <- means[i]
else if (margin == 2)
d[is.na(d[,i]), i] <- means[i]
}
return (d)
}
library(data.table)
library(purrr)
library(ggplot2)
library(randomForest)
io <- list()
io$data.file <- "/Users/ricard/data/NMT-seq/acc/parsed/acc_data.tsv.gz"
io$features.dir <- "/Users/ricard/data/NMT-seq/features/filt"
io$metadata <- "/Users/ricard/data/NMT-seq/sample_info_all.txt"
opts <- list()
# Define which annotations to use
opts$annos <- c("active_enhancers","super_enhancers","DHS","prom_100_100")
# Define which cells to use
opts$cells <- fread(io$in.sample_metadata, header=T) %>% .[pass_accQC==T,sample]
opts$cells <- fread(io$metadata, header=T) %>% .[pass_accQC==T,sample]
opts$min.weight <- 3
opts$min.coverage <- 0.75
opts$fraction.sites <- 0.5
opts$remove.chrXY <- F
opts$ntrees <- 1000
sample_metadata <- fread(file=io$in.sample_metadata, header=T, sep="\t", stringsAsFactors=F) %>% .[sample%in%opts$cells]
sample_metadata <- fread(file=io$metadata, header=T, sep="\t", stringsAsFactors=F) %>% .[sample%in%opts$cells]
io$metadata
fread(file=io$metadata)
opts$cells
sample_metadata <- fread(file=io$metadata) %>% .[sample%in%opts$cells]
View(sample_metadata)
anno_df <- lapply(opts$annos, function(n) fread(sprintf("%s/%s.bed",io$features.dir,n), showProgress=F)) %>% rbindlist
colnames(anno_df) <- c("chr","start","end","strand","id","anno")
data <- fread(sprintf("zcat < %s", io$data.file)) %>%
.[anno%in%opts$annos & sample%in%opts$cells] %>% droplevels()
stopifnot(all(unique(data$sample) %in% opts$cells))
data <- data %>% merge(sample_metadata[,c("sample","culture")], by="sample")
if (opts$remove.chrXY) {
data <- merge(data,anno_df[,c("id","anno","chr")], by=c("id","anno")) %>% .[!chr %in% c("X","Y")] %>% .[,chr:=NULL]
}
data <- data[weight>=opts$min.weight]
data <- data[, cov:=.N/length(opts$cells), by=c("id")] %>% .[cov >= opts$min.coverage] %>% .[,cov:=NULL]
setkey(data,anno)
dmatrix_list <- list()
for (anno in opts$annos) {
tmp <- data[anno,c("id","anno","rate","sample","lineage")] %>%
.[,id_anno:=paste(anno,id,sep="_")] %>% .[,c("id","anno"):=NULL] %>%
dcast(sample+lineage~id_anno, value.var="rate") %>% tibble::column_to_rownames("sample")
met_matrix_list[[anno]] <- tmp[,2:ncol(tmp)] %>% as.matrix(); rownames(met_matrix_list[[anno]]) <- rownames(tmp)
lineages_list[[anno]] <- tmp[,lineage] %>% as.factor
}
setkey(data,anno)
dmatrix_list <- list()
for (anno in opts$annos) {
tmp <- data[anno,c("id","anno","rate","culture")] %>%
.[,id_anno:=paste(anno,id,sep="_")] %>% .[,c("id","anno"):=NULL] %>%
dcast(culture~id_anno, value.var="rate") %>% tibble::column_to_rownames("sample")
dmatrix_list[[anno]] <- tmp[,2:ncol(tmp)] %>% as.matrix(); rownames(dmatrix_list[[anno]]) <- rownames(tmp)
}
tmp <- data[anno,c("id","anno","rate","culture")] %>%
.[,id_anno:=paste(anno,id,sep="_")] %>% .[,c("id","anno"):=NULL] %>%
dcast(culture~id_anno, value.var="rate") %>% tibble::column_to_rownames("sample")
data[anno,c("id","anno","rate","culture")] %>%
.[,id_anno:=paste(anno,id,sep="_")] %>% .[,c("id","anno"):=NULL]
tmp = data[anno,c("id","anno","rate","culture")] %>%
.[,id_anno:=paste(anno,id,sep="_")] %>% .[,c("id","anno"):=NULL]
head(tmp)
data[anno,c("id","anno","rate","culture")] %>%
.[,id_anno:=paste(anno,id,sep="_")] %>% .[,c("id","anno"):=NULL] %>%
dcast(culture~id_anno, value.var="rate")
?dcast
tmp = data[anno,c("id","anno","rate","culture")] %>%
.[,id_anno:=paste(anno,id,sep="_")] %>% .[,c("id","anno"):=NULL]
tmp1 <- tmp %>% dcast(culture~id_anno, value.var="rate")
View(tmp1)
tmp1 <- tmp %>% dcast(id_anno~culture, value.var="rate")
View(tmp1)
tmp <- data[anno,c("sample","id","anno","rate","culture")] %>%
.[,id_anno:=paste(anno,id,sep="_")] %>% .[,c("id","anno"):=NULL] %>%
dcast(id_anno~sample, value.var="rate")
View(tmp)
tmp <- data[anno,c("sample","id","anno","rate","culture")] %>%
.[,id_anno:=paste(anno,id,sep="_")] %>% .[,c("id","anno"):=NULL] %>%
dcast(sample~id_anno, value.var="rate")
View(tmp)
dmatrix_list[[anno]] <- tmp[,2:ncol(tmp)] %>% as.matrix(); rownames(dmatrix_list[[anno]]) <- rownames(tmp)
View(dmatrix_list[[anno]] )
dmatrix_list[[anno]] <- tmp[,2:ncol(tmp)] %>% as.matrix(); rownames(dmatrix_list[[anno]]) <- tmp$sample
View(dmatrix_list[[anno]] )
tmp <- data[anno,c("sample","id","anno","rate","culture")] %>%
.[,id_anno:=paste(anno,id,sep="_")] %>% .[,c("id","anno"):=NULL] %>%
dcast(sample+culture~id_anno, value.var="rate")
View(tmp)
setkey(data,anno)
dmatrix_list <- list()
culture_list <- list()
for (anno in opts$annos) {
tmp <- data[anno,c("sample","id","anno","rate","culture")] %>%
.[,id_anno:=paste(anno,id,sep="_")] %>% .[,c("id","anno"):=NULL] %>%
dcast(sample+culture~id_anno, value.var="rate")
dmatrix_list[[anno]] <- tmp[,2:ncol(tmp)] %>% as.matrix(); rownames(dmatrix_list[[anno]]) <- tmp$sample
culture_list[[anno]] <- tmp[,culture] %>% as.factor
}
lapply(dmatrix_list,dim)
dmatrix_imputed_list <- list()
for (anno in opts$annos) {
# dmatrix_imputed_list[[anno]] <- impute(dmatrix_list[[anno]], margin=1)
dmatrix_imputed_list[[anno]] <- rfImpute(dmatrix_list[[anno]], culture_list[[anno]], iter=10, ntree=opts$ntrees)[,-1]
}
class(dmatrix_list[[anno]])
View(dmatrix_list[[anno]])
setkey(data,anno)
dmatrix_list <- list()
culture_list <- list()
for (anno in opts$annos) {
tmp <- data[anno,c("sample","id","anno","rate","culture")] %>%
.[,id_anno:=paste(anno,id,sep="_")] %>% .[,c("id","anno"):=NULL] %>%
dcast(sample+culture~id_anno, value.var="rate")
dmatrix_list[[anno]] <- tmp[,3:ncol(tmp)] %>% as.matrix(); rownames(dmatrix_list[[anno]]) <- tmp$sample
culture_list[[anno]] <- tmp[,culture] %>% as.factor
}
lapply(dmatrix_list,dim)
dmatrix_imputed_list <- list()
for (anno in opts$annos) {
# dmatrix_imputed_list[[anno]] <- impute(dmatrix_list[[anno]], margin=1)
dmatrix_imputed_list[[anno]] <- rfImpute(dmatrix_list[[anno]], culture_list[[anno]], iter=10, ntree=opts$ntrees)[,-1]
}
rf_list <- list()
rf_list <- list()
for (anno in opts$annos) {
rf_list[[anno]] <- randomForest(x=dmatrix_imputed_list[[anno]], y=culture_list[[anno]], ntree=opts$ntrees)
}
stopifnot(length(unique(lineages_list))==1)
stopifnot(length(unique(culture_list))==1)
rf <- randomForest(x=Reduce(cbind,dmatrix_imputed_list), y=unique(culture_list)[[1]], ntree=opts$ntrees)
true_cultures <- unique(culture_list)[[1]]
true_culture <- unique(culture_list)[[1]]
sensitivity_list <- c()
specificity_list <- c()
accuracy_list <- c()
for (anno in opts$annos) {
pred_culture <- rf_list[[anno]]$predicted
sensitivity_list[anno] <- mean(pred_culture[true_culture=="EPI"] == true_culture[true_culture=="EPI"])
specificity_list[anno] <- mean(pred_culture[true_culture=="PE"] == true_culture[true_culture=="PE"])
accuracy_list[anno] <- mean(pred_culture == true_culture)
}
df <- data.table(anno=names(sensitivity_list), sensitivity=sensitivity_list, specificity=specificity_list, accuracy=accuracy_list) %>%
melt(id.vars="anno", variable.name="metric", value.name="value")
tmp <- c(sensitivity="Sensitivity (EPI)", accuracy="Overall accuracy", specificity="Specificity (PE)")
ggplot(df, aes(x=anno, y=value, fill=anno)) +
geom_bar(stat="identity") +
facet_wrap(~metric, labeller=labeller(metric=tmp)) +
theme(
# plot.margin = margin(5,5,5,5),
# plot.title = element_text(size=17, hjust=0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
# axis.text.x = element_text(size=11, angle=90, hjust=1, vjust=0.5, color="black"),
axis.text.y = element_text(size=11, color="black"),
axis.text.x = element_blank(),
# axis.text.y = element_text(size=12, color="black"),
# axis.title.y = element_text(size=15),
# axis.line = element_line(),
axis.ticks.x =  element_blank(),
panel.background = element_blank()
)
# print(rf$confusion) #  the confusion matrix of the prediction (based on OOB data)
true_culture <- unique(culture_list)[[1]]
# Collect results
sensitivity_list <- c()
specificity_list <- c()
accuracy_list <- c()
for (anno in opts$annos) {
pred_culture <- rf_list[[anno]]$predicted
sensitivity_list[anno] <- mean(pred_culture[true_culture=="2i"] == true_culture[true_culture=="2i"])
specificity_list[anno] <- mean(pred_culture[true_culture=="Serum"] == true_culture[true_culture=="Serum"])
accuracy_list[anno] <- mean(pred_culture == true_culture)
}
df <- data.table(anno=names(sensitivity_list), sensitivity=sensitivity_list, specificity=specificity_list, accuracy=accuracy_list) %>%
melt(id.vars="anno", variable.name="metric", value.name="value")
# Barplot
tmp <- c(sensitivity="Sensitivity (EPI)", accuracy="Overall accuracy", specificity="Specificity (PE)")
ggplot(df, aes(x=anno, y=value, fill=anno)) +
geom_bar(stat="identity") +
facet_wrap(~metric, labeller=labeller(metric=tmp)) +
theme(
# plot.margin = margin(5,5,5,5),
# plot.title = element_text(size=17, hjust=0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
# axis.text.x = element_text(size=11, angle=90, hjust=1, vjust=0.5, color="black"),
axis.text.y = element_text(size=11, color="black"),
axis.text.x = element_blank(),
# axis.text.y = element_text(size=12, color="black"),
# axis.title.y = element_text(size=15),
# axis.line = element_line(),
axis.ticks.x =  element_blank(),
panel.background = element_blank()
)
culture_list$prom_100_100
?randomForest
metadata$2i
table(sample_metadata$culture)
min(table(sample_metadata$culture))
rare.class.prevalence <- min(table(sample_metadata$culture)/nrow(sample_metadata))
rare.class.prevalence
rare.class.prevalence <- min(table(sample_metadata$culture)/nrow(sample_metadata))
anno
anno="super_enhancers"
rare.class.prevalence <- min(table(sample_metadata$culture)/nrow(sample_metadata))
rf_list[[anno]] <- randomForest(x=dmatrix_imputed_list[[anno]], y=culture_list[[anno]], ntree=opts$ntrees, cutoff=c(1-rare.class.prevalence,rare.class.prevalence))
rf_list[[anno]]
nRareSamples = sum(sample_metadata$culture=="2i")
nRareSamples
rf_list[[anno]] <- randomForest(x=dmatrix_imputed_list[[anno]], y=culture_list[[anno]], ntree=opts$ntrees,
strata=culture_list[[anno]], sampsize=c(nRareSamples,nRareSamples))
rf_list[[anno]]
rf_list[[anno]] <- randomForest(x=dmatrix_imputed_list[[anno]], y=culture_list[[anno]], ntree=opts$ntrees, classwt = c(0.0005,1000))
rf_list[[anno]]
rf_list[[anno]] <- randomForest(x=dmatrix_imputed_list[[anno]], y=culture_list[[anno]], ntree=opts$ntrees, classwt = c(1000,0.0005))
rf_list[[anno]]
opts$ntrees
culture_list[[anno]]
sample <- 1:length(culture_list[[anno]])
sample
?sample
sample <-
sample(1:length(culture_list[[anno]]), size=min(table(sample_metadata$culture)), replace=F)
which(culture_list[[anno]]=="2i")
sample <-
sample(which(culture_list[[anno]]=="Serum"), size=min(table(sample_metadata$culture)), replace=F)
sample(which(culture_list[[anno]]=="Serum"), size=min(table(sample_metadata$culture)), replace=F)
idx <- sample(which(culture_list[[anno]]=="Serum"), size=min(table(sample_metadata$culture)), replace=F)
rf_list[[anno]] <- randomForest(x=dmatrix_imputed_list[[anno]][idx,], y=culture_list[[anno]][idx], ntree=opts$ntrees)
idx1 <- which(culture_list[[anno]]=="2i")
idx2 <- sample(which(culture_list[[anno]]=="Serum"), size=min(table(sample_metadata$culture)), replace=F)
idx1 <- which(culture_list[[anno]]=="2i")
idx2 <- sample(which(culture_list[[anno]]=="Serum"), size=min(table(sample_metadata$culture)), replace=F)
rf_list[[anno]] <- randomForest(x=dmatrix_imputed_list[[anno]][c(idx1,idx2),], y=culture_list[[anno]][c(idx1,idx2)], ntree=opts$ntrees)
rf_list[[anno]]
