a <- readRDS("/Users/ricard/data/NMT-seq/rna/parsed/allele_unspecific/sceset.rds")
b <- readRDS("/Users/ricard/Dropbox/NOMe-seq/data/rna.rds")
dim(a)
dim(b)
View(counts(a))
View(counts(b))
counts(a)["Aaas",]
head(counts(a)["Aaas",])
head(counts(b)["Aaas",])
c <- readRDS("/Users/ricard/data/NMT-seq/rna/parsed/allele_unspecific/old/sceset.rds")
head(counts(c)["Aaas",])
dim(a)
dim(b)
head(exprs(b)["Aaas",])
head(exprs(a)["Aaas",])
head(counts(c)["Aacs",])
head(counts(b)["Aacs",])
head(counts(a)["Aacs",])
head(counts(a)["Abcb6",])
head(counts(b)["Abcb6",])
cor(counts(b)["Abcb6",],counts(a)["Abcb6",])
samples <- intersect(colnames(b),colnames(a))
samples
cor(counts(b)["Abcb6",samples],counts(a)["Abcb6",samples])
a <- readRDS("/Users/ricard/Dropbox/NOMe-seq/data/met.rds")
b <- data.table::fread("zcat < /Users/ricard/data/NMT-seq/met/parsed/allele_unspecific/met_data.tsv.gz")
library(data.table)
a <- a %>% as.data.table
library(purrr)
a <- a %>% as.data.table
View(a[anno="genebody"])
View(a[anno=="genebody"])
View(b[anno=="genebody"])
View(b[anno=="active_enhancers"])
View(a[anno=="active_enhancers"])
## I/O ##
io <- list()
io$in.file <- "/Users/ricard/NMT-seq/scMT/expr/data/sceset_merged.rds"
## Options ##
opts <- list()
library(data.table)
library(purrr)
library(scater)
library(ggplot2)
sceset <- readRDS(io$in.file)
pluri <- fread("/Users/ricard/NMT-seq/genesets/pluripotency.tsv", header=F) %>% setnames(c("ens_id","gene")) %>% .[["gene"]]
diff <- fread("/Users/ricard/NMT-seq/genesets/differentiation.tsv", header=F) %>% setnames(c("ens_id","gene")) %>% .[["gene"]]
housek <- fread("/Users/ricard/NMT-seq/genesets/housekeeping.tsv", header=F) %>% setnames(c("ens_id","gene")) %>% .[["gene"]]
# Pick random genes
genes <- sample(rownames(sceset),5000)
plotPCA(sceset, colour_by="method", shape_by="culture", size_by="control")
plotPCA(sceset[genes], colour_by="method", shape_by="culture", size_by="control")
# plotTSNE(sceset[genes], colour_by="type", shape_by="culture")
plotPCA(sceset[genes], colour_by="method", shape_by="culture", size_by="control")
plotPCA(sceset, colour_by="method", shape_by="culture", size_by="control")
View(pData(sceset))
dim(sceset)
dim(sceset[,!sceset$dataset=="Clark (NMT)" & sceset$culture=="2i"])
sceset$dataset=="Clark (NMT)" & sceset$culture=="2i"]
sceset$dataset=="Clark (NMT)" & sceset$culture=="2i"
dim(sceset[,!(sceset$dataset=="Clark (NMT)" & sceset$culture=="2i")])
sceset <- sceset[,!(sceset$dataset=="Clark (NMT)" & sceset$culture=="2i")]
# Pick random genes
genes <- sample(rownames(sceset),5000)
plotPCA(sceset, colour_by="method", shape_by="culture", size_by="control")
plotPCA(sceset[genes], colour_by="method", shape_by="culture", size_by="control")
# plotTSNE(sceset[genes], colour_by="type", shape_by="culture")
# Pick random genes
genes <- sample(rownames(sceset),5000)
plotPCA(sceset, colour_by="method", shape_by="culture", size_by="control")
plotPCA(sceset[genes], colour_by="method", shape_by="culture", size_by="control")
# plotTSNE(sceset[genes], colour_by="type", shape_by="culture")
feature_df <- data.frame(gene=c(pluri,diff,housek), class=c(rep("Pluripotency",length(pluri)),rep("Differentiation",length(diff)),rep("Housekeeping",length(housek)))) %>% tibble::column_to_rownames("gene")
sample_df <- data.frame(sample=colnames(sceset), dataset=sceset$dataset, method=sceset$method, culture=sceset$culture) %>% tibble::column_to_rownames("sample")
pheatmap::pheatmap(t(exprs(sceset)[rownames(feature_df),]), border_color="black", main="",
cluster_cols=F, cluster_rows=T, show_rownames=FALSE, show_colnames=FALSE,
annotation_row=sample_df, annotation_col=feature_df, annotation_colors=NA,
legend=TRUE, annotation_legend=TRUE, legend_labels=NA,
annotation_names_col=F, fontsize=13)
rownames(sceset)
library(data.table)
library(purrr)
a <- data.table::fread("zcat < /Users/ricard/data/NMT-seq/met/parsed/allele_unspecific/met_data.tsv.gz")
b <- data.table::fread("zcat < /Users/ricard/data/NMT-seq/dna/parsed/allele_unspecific/dna_data.tsv.gz")
head(a)
head(ceiling(a$rate))
ceiling(71.21)
?round
head(round(a$rate))
a$rate <- round(a$rate)
b$rate <- round(b$rate)
head(b)
fwrite(a, "/Users/ricard/data/NMT-seq/met/parsed/allele_unspecific/met_data.tsv")
fwrite(b, "/Users/ricard/data/NMT-seq/met/parsed/allele_unspecific/dna_data.tsv")
fwrite(b, "/Users/ricard/data/NMT-seq/dna/parsed/allele_unspecific/dna_data.tsv")
fwrite(a, "/Users/ricard/data/NMT-seq/met/parsed/allele_unspecific/met_data.tsv", sep="\t", row.names=F, col.names=T)
fwrite(b, "/Users/ricard/data/NMT-seq/dna/parsed/allele_unspecific/dna_data.tsv", sep="\t", row.names=F, col.names=T)
library(scater)
library(purrr)
library(weights)
library(cowplot)
library(ggplot2)
library(data.table)
# Create boxplot theme
heatmap_theme <- function() {
p <- theme(
plot.title = element_text(size=28, hjust=0.5, margin=margin(0,0,20,0)),
axis.title.y = element_text(colour="black", size=28, vjust=0.9, margin=margin(0,20,0,0)),
axis.title.x = element_text(colour="black", size=28, vjust=0.9, margin=margin(20,0,0,0)),
axis.text.x = element_text(colour="black",size=rel(1.8)),
axis.text.y = element_text(colour="black",size=rel(1.8), angle = 90, hjust = 0.5),
axis.line = element_blank(), ##element_line(colour="black", size=rel(0.7)),
axis.ticks.x = element_line(colour="black", size=rel(0.8)),
axis.ticks.y = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank(),
#legend.position="top",
legend.text=element_text(size=14),
legend.title=element_text(size=16, hjust = 1, vjust = 0.9),
legend.background=element_blank(),
panel.border = element_blank()
)
}
# Low and high colours for heatmaps
low_col <- "khaki1"
high_col <- "firebrick3"
axis_labels <- c("Q1", "Q2", "Q3", "Q4")
quan_seq <- seq(0, 1, 0.25)
# Data files
io <- list()
io$met_file  <- "/Users/ricard/data/NMT-seq/met/parsed/allele_unspecific/met_data.tsv.gz"
io$dna_file  <- "/Users/ricard/data/NMT-seq/dna/parsed/allele_unspecific/dna_data.tsv.gz"
opts <- list()
opts$min.weight     <- 1      # Minimum weight per feature
opts$min.coverage   <- 0.5    # minimum coverage per feature across samples (methylation)
opts$min.s          <- 20     # minimum number of samples to compute variance
# gene-associated contexts
opts$dna_anno <- "prom_100_100"
opts$met_anno <- "prom_500_500"
# Methylation
met <- fread(sprintf("zcat < %s",io$met_file)) %>% as.data.table %>% .[anno %in% opts$met_anno]
# Accessibility
dna <- fread(sprintf("zcat < %s",io$dna_file)) %>% as.data.table %>% .[anno %in% opts$dna_anno]
# Intersect the three data sets
metdna <- merge(met[,c("sample", "id", "rate", "weight")] %>% setnames(c("rate", "weight"), c("met_rate", "met_weight")),
dna[,c("sample", "id", "rate", "weight")] %>% setnames(c("rate", "weight"), c("dna_rate", "dna_weight")),
by=c("sample","id"))
# Remove features with low weight (all types of correlation)
metdna <- metdna[met_weight >= opts$min.weight & dna_weight >= opts$min.weight]
## Filter genes with low cellular detection rate and small number of samples
metdna <- metdna[, n := .N,  by = c("id")] %>% .[n > opts$min.s] %>% .[,  n := NULL]
## Filter sites with low coverage
nsamples <- length(unique(metdna$sample))
metdna <- metdna[, cov := .N / nsamples, by = c("id")] %>% .[cov >= opts$min.coverage] %>% .[, cov := NULL]
metdna
metdna
# Compute variance and mean of each gene per annotation across all cells
var_samples <- metdna[, .(met_var = var(met_rate), dna_var = var(dna_rate),
met_mean = mean(met_rate), dna_mean = mean(dna_rate)),
by = c("id")]
View(var_samples)
?cut
var_samples <- var_samples[, c("met_quantile", "dna_quantile") :=
list(,cut(met_var, breaks=c(0,25,50,75,100), labels=axis_labels, include.lowest=TRUE),
cut(dna_var, breaks=c(0,25,50,75,100), labels=axis_labels, include.lowest=TRUE)) ]
quan_seq
var_samples <- var_samples[, c("met_quantile", "dna_quantile") :=
list(cut(met_mean, breaks=quan_seq, labels=axis_labels, include.lowest=TRUE),
cut(dna_mean, breaks=quan_seq, labels=axis_labels, include.lowest=TRUE)) ]
View(var_samples)
quan_seq
axis_labels
?cut
View(var_samples)
var_samples <- var_samples[, c("met_quantile", "dna_quantile") :=
list(cut(met_mean, breaks=quan_seq*100, labels=axis_labels, include.lowest=TRUE),
cut(dna_mean, breaks=quan_seq*100, labels=axis_labels, include.lowest=TRUE)) ]
View(var_samples)
met$sample
unique(met$sample)
length(unique(met$sample))
seq(0,1,0.25)
seq(0,1,0.25)
c(0,0.01,0.33,0.66)
c(0,0.05,0.33,0.66,1.0)
library(scater)
library(purrr)
library(weights)
library(cowplot)
library(ggplot2)
library(data.table)
# Create boxplot theme
heatmap_theme <- function() {
p <- theme(
plot.title = element_text(size=28, hjust=0.5, margin=margin(0,0,20,0)),
axis.title.y = element_text(colour="black", size=28, vjust=0.9, margin=margin(0,20,0,0)),
axis.title.x = element_text(colour="black", size=28, vjust=0.9, margin=margin(20,0,0,0)),
axis.text.x = element_text(colour="black",size=rel(1.8)),
axis.text.y = element_text(colour="black",size=rel(1.8), angle = 90, hjust = 0.5),
axis.line = element_blank(), ##element_line(colour="black", size=rel(0.7)),
axis.ticks.x = element_line(colour="black", size=rel(0.8)),
axis.ticks.y = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank(),
#legend.position="top",
legend.text=element_text(size=14),
legend.title=element_text(size=16, hjust = 1, vjust = 0.9),
legend.background=element_blank(),
panel.border = element_blank()
)
}
# Low and high colours for heatmaps
low_col <- "khaki1"
high_col <- "firebrick3"
axis_labels <- c("Q1","Q2","Q3","Q4")
# Data files
io <- list()
io$rna_file  <- "/Users/ricard/data/NMT-seq/rna/parsed/allele_unspecific/sceset.rds"
io$met_file  <- "/Users/ricard/data/NMT-seq/met/parsed/allele_unspecific/met_data.tsv.gz"
io$dna_file  <- "/Users/ricard/data/NMT-seq/dna/parsed/allele_unspecific/dna_data.tsv.gz"
opts <- list()
opts$min.weight     <- 1      # Minimum weight per feature
opts$min.coverage   <- 0.3    # minimum coverage per feature across samples (methylation)
opts$min.s          <- 20     # minimum number of samples to compute correlation
# quan_seq <- seq(0,1,0.25)
met_levels <- c(0,0.05,0.33,0.66,1.0)
acc_levels <- c()
# gene-associated contexts
opts$dna_anno <- "prom_200_200_cgi"
opts$met_anno <- "prom_500_500_cgi"
# Methylation
met <- fread(sprintf("zcat < %s",io$met_file)) %>% as.data.table %>% .[anno %in% opts$met_anno]
# Accessibility
dna <- fread(sprintf("zcat < %s",io$dna_file)) %>% as.data.table %>% .[anno %in% opts$dna_anno]
# Expression
sceset <- readRDS(file = io$rna_file)
rna <- exprs(sceset) %>% t %>% as.data.table(keep.rownames = "sample") %>%
melt(id.vars = "sample", value.name = "expr", variable.name = "gene") %>%
merge(fData(sceset) %>% tibble::rownames_to_column("gene") %>% .[,c("gene","ens_id")] %>% setnames("ens_id","id"))
# Intersect the three data sets
metdna <- merge(met[,c("sample", "id", "rate", "weight")] %>% setnames(c("rate", "weight"), c("met_rate", "met_weight")),
dna[,c("sample", "id", "rate", "weight")] %>% setnames(c("rate", "weight"), c("dna_rate", "dna_weight")),
by=c("sample","id"))
metdnarna <- merge(metdna, rna, by=c("sample","id"))
# Remove features with low weight (all types of correlation)
metdnarna <- metdnarna[met_weight >= opts$min.weight & dna_weight >= opts$min.weight]
## Filter genes with low cellular detection rate and small number of samples
metdnarna <- metdnarna[, n := .N,  by = c("id","gene")] %>% .[n > opts$min.s] %>% .[,  n := NULL]
## Filter sites with low coverage
nsamples <- length(unique(metdnarna$sample))
metdnarna <- metdnarna[, cov := .N / nsamples, by = c("id","gene")] %>% .[cov >= opts$min.coverage] %>% .[, cov := NULL]
# Compute variance and mean of each gene per annotation across all cells
var_samples <- metdnarna[, .(met_var = var(met_rate), dna_var = var(dna_rate), expr_var = var(expr),
met_mean = mean(met_rate), dna_mean = mean(dna_rate), expr_mean = mean(expr)),
by = c("id","gene")]
quantile(var_samples$met_var, probs=quan_seq)
met_levels
quantile(var_samples$met_mea, probs=quan_seq)
quantile(var_samples$met_mean, probs=quan_seq)
met_levels <- c(0,1,33,66,100)
quantile(var_samples$dna_mean, probs=quan_seq)
library(data.table)
library(purrr)
a <- fread("/Users/ricard/perturbseq/bmdc/0hr/tmp/guides/asd.txt", header=F, col.names=as.character(1:4086), fill=T) %>% as.data.frame() %>%
tibble::column_to_rownames("1")
b <- fread("/Users/ricard/perturbseq/bmdc/0hr/tmp/guides/foo.txt", header=F, fill=T) %>% as.data.frame() %>%
tibble::column_to_rownames("V1")
a.list <- setNames(split(a, seq(nrow(a))), rownames(a))
a.list <- setNames(split(as.matrix(a),seq(nrow(a))), rownames(a))
a.list[["m_Nfkb1_2"]] <- as.character(b[1,])
all_guides <- c(rownames(a),rownames(b))
all_samples <- Reduce(union,a.list)
all_samples <- all_samples[!all_samples==""]
c <- matrix(0, nrow=length(a.list), ncol=length(all_samples))
rownames(c) <- names(a.list)
colnames(c) <- all_samples
for (guide in all_guides)
c[guide,] <- as.numeric(all_samples %in% a.list[[guide]])
fwrite(c,file="/Users/ricard/Downloads/perturb-seq/bmdc/0hr/binary_matrix.tsv", sep="\t")
class(c)
